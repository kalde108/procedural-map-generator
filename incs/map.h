#ifndef MAP_H
# define MAP_H

typedef enum {
	NOISE_CONTINENTS = 0,
	NOISE_EROSION,
	NOISE_TEMPERATURE,
	NOISE_VEGETATION,
	NOISE_RIDGES,
	NOISE_COUNT
}	NoiseEnum;

typedef enum {
	CONT_MUSHROOM_FIELDS,
	CONT_DEEP_OCEAN,
	CONT_OCEAN,
	CONT_COAST,
	CONT_NEAR_INLAND,
	CONT_MID_INLAND,
	CONT_FAR_INLAND
}	Continentalness;

# define CONT_MUSHROOM_FIELDS_THRESHOLD -1.05
# define CONT_DEEP_OCEAN_THRESHOLD -0.455
# define CONT_OCEAN_THRESHOLD -0.19
# define CONT_COAST_THRESHOLD -0.11
# define CONT_NEAR_INLAND_THRESHOLD 0.03
# define CONT_MID_INLAND_THRESHOLD 0.3
// # define CONT_FAR_INLAND_THRESHOLD 1.0

typedef enum {
	PV_VALLEYS,
	PV_LOW,
	PV_MID,
	PV_HIGH,
	PV_PEAKS
}	PeaksValleys;

# define PV_VALLEYS_THRESHOLD -0.85
# define PV_LOW_THRESHOLD -0.6
# define PV_MID_THRESHOLD 0.2
# define PV_HIGH_THRESHOLD 0.7
// # define PV_PEAKS_THRESHOLD 1.0

# define TEMP_LEVEL_0_THRESHOLD -0.45
# define TEMP_LEVEL_1_THRESHOLD -0.15
# define TEMP_LEVEL_2_THRESHOLD 0.2
# define TEMP_LEVEL_3_THRESHOLD 0.55
// # define TEMP_LEVEL_4_THRESHOLD 1.0

# define HUM_LEVEL_0_THRESHOLD -0.35
# define HUM_LEVEL_1_THRESHOLD -0.1
# define HUM_LEVEL_2_THRESHOLD 0.1
# define HUM_LEVEL_3_THRESHOLD 0.3
// # define HUM_LEVEL_4_THRESHOLD 1.0

# define ERO_LEVEL_0_THRESHOLD -0.78
# define ERO_LEVEL_1_THRESHOLD -0.375
# define ERO_LEVEL_2_THRESHOLD -0.2225
# define ERO_LEVEL_3_THRESHOLD 0.05
# define ERO_LEVEL_4_THRESHOLD 0.45
# define ERO_LEVEL_5_THRESHOLD 0.55
// # define ERO_LEVEL_6_THRESHOLD 1.0

# define MAP_WIDTH 1024
# define MAP_HEIGHT 1024

class Map {
public:
	Map();
	~Map();

private:
	int		*temperature_map;
	int 	*humidity_map;
	int		*height_map;
};


#endif
